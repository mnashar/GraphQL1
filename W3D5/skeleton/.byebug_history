c!
c
display arr.length
display node.value
c
undisplay 2
display node.value
disp arr.each {|ele| ele.value}
display arr.length
exit
display arr
c!
c
undisp 4
undisplay
undisplay actual_child
undis actual child
undisplay actual_child
display actual_child.value
c
display actual_child
c
children.length
c
self.children.length
b.children.length
c
display child.value
display self.value
display target_value
c
display child.value
display target_value
display self.value
display value
c
display child.value
display target_value
display value
c
display value
display target_value
c
display child.value
display value
display target_value
c
display child.value
display target_value
display self.value
c
display target_value
display self.value
c
child.value
child
c
self.value == target_value
c
self.value == target_value
c
display self.value
display target_value
c
display self.value 
c
child.value
display target_value
c
target_value
child.value
child
c
display target_value
display self.value
c
self.value
target_value
c
display self.value
display target_value
c
step
child.value
child
children
self
self.value == target_value
c
display target_value
display self.value
c
target_value
c
display self.value
c
self.value
c
target_value
self.value
c
children[0]
children.length
children.is_a?(Array)
children
c
s
step
c
step
result
exit
@children.length
@children
child.length
child
exit
c
s
step
self.value
@children.length
@children
display target_value
c
